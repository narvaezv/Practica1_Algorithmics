import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;

import models.DocumentData;
import models.GenericDocumentData;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {

    public static void main(String[] args) {
        
        // Asignando datos
        List<DocumentData> documents = new ArrayList<>();
        documents = setData();

        // indicator = 00
        List<DocumentData> sinGrupo = documents.stream()
            .filter(document -> "00".equals(document.getIndicator()))
            .collect(Collectors.toList());

        // indicator = 01 && groupId = A
        List<DocumentData> grupoA = documents.stream()
            .filter(document -> "01".equals(document.getIndicator()))
            .filter(document -> "A".equals(document.getGroupId()))
            .collect(Collectors.toList());

        // indicator = 01 && groupId = D
        List<DocumentData> grupoD = documents.stream()
            .filter(document -> "01".equals(document.getIndicator()))
            .filter(document -> "D".equals(document.getGroupId()))
            .collect(Collectors.toList());
        
        // Agrupa y asigna propiedades faltantes
        List<GenericDocumentData> genericDocs = new ArrayList<>();
            genericDocs.addAll(aislarDocs(sinGrupo));
            genericDocs.addAll(agruparDocs(grupoA, "A"));
            genericDocs.addAll(agruparDocs(grupoD, "D"));
        
        // imprime resultado
        //genericDocs.stream().forEach(System.out::println);
        //System.out.println("----------------------------");
        Gson gson = new GsonBuilder().setPrettyPrinting().create();
        System.out.println(gson.toJson(genericDocs));
    }

    private static List<GenericDocumentData> agruparDocs(List<DocumentData> grupoA, String group) {
        List<GenericDocumentData> genericDocuments = new ArrayList<>();
        GenericDocumentData genericDocument = new GenericDocumentData();
        switch(group){
            case "A": 
                genericDocument.setEuCode("D001"); 
                genericDocument.setName("Identificacion Oficial");
                break;
            case "D": 
                genericDocument.setEuCode("D004"); 
                genericDocument.setName("Comprobante de domicilio");
                break;
        }
        genericDocument.setDocument(grupoA);
        genericDocuments.add(genericDocument);
        return genericDocuments;
    }

    private static List<GenericDocumentData> aislarDocs(List<DocumentData> sinGrupo) {
        List<GenericDocumentData> genericDocuments = new ArrayList<>();
        for (DocumentData var : sinGrupo) {
            GenericDocumentData data = new GenericDocumentData();
            List<DocumentData> document = new ArrayList<>();
            document.add(var);
            data.setDocument(document);
            switch(var.getGroupId()){
                case "B": 
                    data.setEuCode("D002"); 
                    data.setName("Comprobante de compra");
                    break;
                case "C": 
                    data.setEuCode("D003"); 
                    data.setName("Estado de cuenta");
                    break;
            }
            genericDocuments.add(data);
        }
        return genericDocuments;
    }

    private static List<DocumentData> setData() {
        List<DocumentData> documents = new ArrayList<>();
        // Documento 1
        DocumentData documentData1 = new DocumentData();
        documentData1.setIndicator("01");
        documentData1.setGroupId("A");
        documentData1.setName("INE");
        documents.add(documentData1);

        // Documento 2
        DocumentData documentData2 = new DocumentData();
        documentData2.setIndicator("00");
        documentData2.setGroupId("B");
        documentData2.setName("Ticket de compra");
        documents.add(documentData2);

        // Documento 3
        DocumentData documentData3 = new DocumentData();
        documentData3.setIndicator("01");
        documentData3.setGroupId("A");
        documentData3.setName("Pasaporte");
        documents.add(documentData3);

        // Documento 4
        DocumentData documentData4 = new DocumentData();
        documentData4.setIndicator("00");
        documentData4.setGroupId("C");
        documentData4.setName("Estado de cuenta");
        documents.add(documentData4);

        // Documento 5
        DocumentData documentData5 = new DocumentData();
        documentData5.setIndicator("01");
        documentData5.setGroupId("A");
        documentData5.setName("Cedula profesional");
        documents.add(documentData5);

        // Documento 6
        DocumentData documentData6 = new DocumentData();
        documentData6.setIndicator("01");
        documentData6.setGroupId("D");
        documentData6.setName("Recibo de luz");
        documents.add(documentData6);

        // Documento 5
        DocumentData documentData7 = new DocumentData();
        documentData7.setIndicator("01");
        documentData7.setGroupId("D");
        documentData7.setName("Recibo de telefono");
        documents.add(documentData7);

        return documents;
    }
}
